FROM python:3.9-alpine as base

# declare params
ENV ANYLOG_PATH=/app \
    APP_NAME=anylog_v1.3.2403-opensource-test \
    ANYLOG_HOME=/app/AnyLog-Network \
    BLOCKCHAIN_DIR=/app/AnyLog-Network/blockchain \
    DATA_DIR=/app/AnyLog-Network/data \
    LOCAL_SCRIPTS=/app/deployment-scripts/node-deployment \
    TEST_DIR=/app/deployment-scripts/test \
    DEBIAN_FRONTEND=noninteractive \
    NODE_TYPE=generic
#    NODE_NAME=anylog-node

WORKDIR $ANYLOG_PATH
RUN mkdir -p $ANYLOG_HOME/ && mkdir -p $ANYLOG_PATH/nebula

COPY dockerfiles/deploy_anylog.sh $ANYLOG_HOME/deploy_anylog.sh
COPY dockerfiles/requirements.txt $ANYLOG_HOME/requirements.txt
COPY setup.cfg $ANYLOG_HOME/setup.cfg

# Nebula
COPY nebula/ca.crt $ANYLOG_PATH/nebula/ca.crt
COPY nebula/ca.key $ANYLOG_PATH/nebula/ca.key
COPY nebula/deploy_nebula.sh  $ANYLOG_PATH/nebula/deploy_nebula.sh
COPY nebula/config.yml $ANYLOG_PATH/nebula/config.yml
COPY nebula/config_nebula.py $ANYLOG_PATH/nebula/run.py
COPY nebula/export_nebula.sh $ANYLOG_PATH/nebula/export_nebula.sh

EXPOSE $ANYLOG_SERVER_PORT $ANYLOG_REST_PORT $ANYLOG_BROKER_PORT

RUN apk update && \
    apk upgrade && \
    apk add --no-cache bash git openssh-client gcc python3-dev musl-dev && \
    apk add bash python3 python3-dev py3-pip wget build-base libffi-dev py3-psutil && \
    python3 -m pip install --upgrade pip && \
    python3 -m pip install --upgrade -r /app/AnyLog-Network/requirements.txt && \
    git clone -b os-dev https://github.com/AnyLog-co/deployment-scripts && \
    rm -rf $ANYLOG_PATH/deployment-scripts/archive $ANYLOG_PATH/deployment-scripts/test && \
    wget http://173.255.254.34:31900/alpine/${APP_NAME} # needs to be updated whenever running a new build


FROM base AS deployment
#ENTRYPOINT ["/bin/bash"]
ENTRYPOINT bash $ANYLOG_HOME/deploy_anylog.sh